            STEP TO CREATE REQUIREMENT.TXT Files

# pip freeze >> requirements.txt : This commad is use to create requirements.txt file automatically.
# cat requirements.txt : This command is use to show the list of requirement that is workin on your app.
                OR u Can Use:
# type requirements.txt : This command is use to show the list of requirement that is workin on your app.

# pip install -r requirementx.txt : This command is use to install the requirements.txt file, so that developer dont need to install them one by 




____________________________________________________________________

     =========STEP BY STEP TO GREATE .GITIGNORE FILE==========
__________________________________________________________________

1. Navigate to Your Project Directory
First, you need to navigate to your project directory (C:\DUNIS_PROJECTS\buz_owners) in your bash terminal. Hereâ€™s how you do it:

cd /c/DUNIS_PROJECTS/buz_owners

2. Activate Your Virtual Environment (If Needed)
source venv/Scripts/activate


3. Create .gitignore File
 # touch .gitignore : this is a command to create .gitignore file


4. Add Files and Folders to Ignore

file.txt :      to ignore a files named file.txt or any files at all.

# Ignore the virtual environment folder
venv/ :         To Ignore a Specific Directory  you add a slash at the end:

# Ignore Python cache files
__pycache__/ :      To Ignore a Specific Directory  you add a slash at the end:

# Ignore environment variables
.env:           Ignore a Hidden File: To ignore a hidden file like .env

# Ignore log files
*.log:          Ignore All Files with a Certain Extension To ignore all .log files


#------Understanding .gitignore Patterns:--------#
    i. Ignore the Virtual Environment Folder:  venv/
    ii. Ignore Python Cache Folder:  __pycache__/
    iii. Ignore Log Files:  *.log
            This * log pattern tells Git to ignore all files with a .log extension. Log files are 
            often generated during runtime and are not necessary for version control.





#------How To automatically Run all the schema.sql (SQL Command) that is use to create Your Projec:--------#

What is schema.sql?
schema.sql is a file that contains SQL commands to create the structure of your database, such as creating tables
You need to find where PostgreSQL is installed on your system. Typically, it's in a directory like C:\Program Files\PostgreSQL\xx\bin\, where xx is the version number.
Open File Explorer and navigate to C:\Program Files\PostgreSQL\. Look for a folder named with the PostgreSQL version number (e.g., 14, 15
Open the bin Directory inside that folder. It should contain pg_dump.exe.

Then Copy that directory to your Command Prompt in my own case the directory is: C:\Program Files\PostgreSQL\16\bin

Run the pg_dump Command:
Now that you are in the bin directory, you can run your pg_dump command below:
pg_dump -U postgres -s -d business_owners_db > C:\DUNIS_PROJECTS\buz_owners\schema.sql
This will automatically create the schema.sql file in your project directory. NOTE: It will prompt you to put your database password
If you need to export the data as well, you can run a similar pg_dump command without the -s you can just remove the -s and leave the -d

NOTE: C:\DUNIS_PROJECTS\buz_owners is my project directory where am building  my web app.


If another developer needs to set up the database, they can simply run this schema.sql file to recreate the database structure.
To do this, they can use the following command:
psql -U postgres -d new_database_name -f C:\DUNIS_PROJECTS\buz_owners\schema.sql



